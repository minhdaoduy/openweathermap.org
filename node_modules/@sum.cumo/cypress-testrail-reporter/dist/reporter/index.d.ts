import { TestrailReporterConfig, TestRailCypressResults, TestRailReference, TestRailRun, TestRailRunsResponse } from '../types';
export declare function getFormattedErrorMessages(testCase: TestRailReference): string | null;
declare class TestRailReporter {
    private readonly branchName;
    private readonly config;
    private readonly cases;
    private currentRun;
    private client;
    refs: null | string;
    constructor(config: TestrailReporterConfig, branchName: string, cases: TestRailReference[]);
    get hasCases(): boolean;
    /**
     * Should only post results if cases were provided
     * @returns {boolean}
     */
    shouldPostResults(): boolean;
    setRefs(): void;
    getBranchReferenceRegex(): RegExp | null;
    getCoveredCases(): Array<string>;
    getTestRailResults(): TestRailCypressResults;
    onError(e: any): void;
    findOrCreateRunByName(response: TestRailRunsResponse): Promise<TestRailRun>;
    private findOrCreateRun;
    private addResultsForCases;
    private addAttachmentsToTestRun;
    private addAssetsToTestRun;
    postResults(closeRun: boolean, attachments: string[], assets: string[], assetsArchiveName: string): Promise<void>;
    closeTestrailRun(): Promise<void>;
}
export default TestRailReporter;
