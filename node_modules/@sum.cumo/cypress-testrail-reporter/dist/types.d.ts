export declare type CypressReportError = {
    message: string;
    estack: string;
    diff: string;
};
export declare type TestrailReporterConfig = {
    projectId: string;
    suiteId: string | null;
    branchReferenceRegex: string;
    reportFilename: string;
    host: string;
    user: string;
    password: string;
    screenshotsFolder: string;
    videosFolder: string;
    includeAll: boolean;
};
export declare type TestRailReference = {
    caseId: string;
    results: number[];
    err: Array<CypressReportError | boolean>;
};
export declare type TestRailRun = {
    id: number;
    name: string;
    is_completed: boolean;
    milestone_id: number | null;
};
export declare type TestRailRunsResponse = {
    offset: number;
    limit: number;
    size: number;
    _links: {
        next: string | null;
        prev: string | null;
    };
    runs: TestRailRun[];
};
export declare type TestRailCypressResult = {
    case_id: string;
    status_id: number;
    comment: string | null;
};
export declare type TestRailCypressResults = {
    results: Array<TestRailCypressResult>;
};
export declare type CypressTestRailResult = {
    file: string;
    cases: {
        [caseId: string]: TestRailReference;
    };
};
export declare type ReportAnalysis = {
    passed: number;
    failed: number;
    skipped: number;
};
export declare type CombinedResult = {
    analysis: ReportAnalysis;
    tests: Array<CypressTestRailResult>;
    testRailCases: Array<TestRailReference>;
};
export declare type CypressReportSuiteTest = {
    title: string;
    fullTitle: string;
    timedOut: any;
    duration: number;
    state: string;
    speed: string | null;
    pass: boolean;
    fail: boolean;
    pending: boolean;
    context: any;
    code: string;
    err: CypressReportError | {};
    uuid: string;
    parentUUID: string;
    isHook: boolean;
    skipped: boolean;
};
export declare type CypressReportSuite = {
    uuid: string;
    title: string;
    fullFile: string;
    file: string;
    beforeHooks: Array<any>;
    afterHooks: Array<any>;
    tests: Array<CypressReportSuiteTest>;
    suites: Array<CypressReportSuite>;
    passes: Array<string>;
    failures: Array<string>;
    pending: Array<string>;
    skipped: Array<string>;
    duration: number;
    root: boolean;
    rootEmpty: boolean;
    _timeout: number;
};
